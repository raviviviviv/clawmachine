#include <LiquidCrystal_I2C.h>
LiquidCrystal_I2C lcd(0x27, 20, 4);




#define ena 10
#define in1 8
#define in2 9
#define enb 11
#define in3 12
#define in4 13
#define coinpin 2
#define right A2
#define left A3
#define up A0
#define down A1
volatile bool coinflag = false;
bool lastcoinflag = false;
volatile unsigned long lastCoinTime = 0;  // Store last coin pulse time
const unsigned long debounceDelay = 20;   // Debounce time in ms
int onoff = 0;


#include <Servo.h>
Servo myservo;


#define buttonpin 3
#define servo 6
int pos = 0;
int neg = 0;
int buttonpush = 0;                   // variable for reading the pushbutton status
volatile unsigned long lastTime = 0;  // Store last coin pulse time
unsigned long debounceDelay_2 = 200;  // Debounce time in ms






void coin() {
  unsigned long currentTime = millis();
  if (currentTime - lastCoinTime > debounceDelay) {
    lastCoinTime = currentTime;
    coinflag = !coinflag;
    onoff = 1;
    lcd.clear();
    /*Serial.println(onoff);
    Serial.println("Coin detected!");*/
  }
}


int actclaw() {
  unsigned long currentTime = millis();
  if (currentTime - lastTime > debounceDelay_2) {
    lastTime = currentTime;
    buttonpush++;


    Serial.println("act");


    if (buttonpush == 1) {
      Serial.println(buttonpush);




      return 1;
    }




    if (buttonpush == 2) {


      return 2;
    }
  }
}




void setup() {
  // put your setup code here, to run once:
  lcd.init();
  lcd.backlight();
  pinMode(right, INPUT_PULLUP);
  pinMode(left, INPUT_PULLUP);
  pinMode(up, INPUT_PULLUP);
  pinMode(down, INPUT_PULLUP);
  pinMode(ena, OUTPUT);
  pinMode(enb, OUTPUT);
  pinMode(in3, OUTPUT);
  pinMode(in4, OUTPUT);




  pinMode(in1, OUTPUT);
  pinMode(in2, OUTPUT);
  pinMode(coinpin, INPUT_PULLUP);
  Serial.begin(9600);
  pinMode(buttonpin, INPUT_PULLUP);
  Serial.begin(9600);
  int buttonpush = 0;
  myservo.attach(6);
  myservo.write(0);
  attachInterrupt(digitalPinToInterrupt(coinpin), coin, FALLING);






  Serial.println("setup");
}




int getpos() {


  if (digitalRead(up) == 0) {
    return 1;
  } else if (digitalRead(down) == 0) {
    return 2;
  } else if (digitalRead(left) == 0) {
    return 3;
  } else if (digitalRead(right) == 0) {
    return 4;
  } else {
    return 5;
  }
}


void moveright() {
  analogWrite(ena, 255);
  digitalWrite(in1, 0);
  digitalWrite(in2, 1);


  lcd.setCursor(0, 0);
  lcd.print("right  ");
}


void moveleft() {


  analogWrite(ena, 255);
  digitalWrite(in1, 1);
  digitalWrite(in2, 0);
  lcd.setCursor(0, 0);
  lcd.print("left  ");
}


void moveup() {
  //Serial.println("case 1");
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("up  ");
  analogWrite(enb, 255);
  digitalWrite(in3, 0);
  digitalWrite(in4, 1);
}
void movedown() {
  //Serial.println("case2");
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("down  ");
  analogWrite(enb, 255);
  digitalWrite(in3, 0);
  digitalWrite(in4, 1);
}






void dialog() {


  lcd.setCursor(5, 1);
  lcd.print("enter coin");
}


void animation_2() {
  int anidelay = 500;
  for (int I = 0; I < 19; I++) {
    lcd.setCursor(I, 0);
    lcd.print("O");
    delay(anidelay);
    lcd.clear();
  }
  for (int I = 0; I < 3; I++) {
    lcd.setCursor(19, I);
    lcd.print("O");
    delay(anidelay);
    lcd.clear();
  }
  for (int I = 19; I > 0; I--) {
    lcd.setCursor(I, 3);
    lcd.print("O");
    delay(anidelay);
    lcd.clear();
  }
  for (int I = 3; I > 0; I--) {
    lcd.setCursor(0, I);
    lcd.print("O");
    delay(anidelay);
    lcd.clear();
  }
}


void idle() {
  analogWrite(ena, 0);
  analogWrite(enb, 0);
  digitalWrite(in1, LOW);
  digitalWrite(in2, LOW);
  digitalWrite(in3, LOW);
  digitalWrite(in4, LOW);
}


void loop() {
  // put your main code here, to run repeatedly:




  if (onoff == 1) {
    switch (getpos()) {  //if onoff is on do the main loop
      case 1:            //up
        moveup();
        Serial.println("up");
        break;
      case 2:  //down
        movedown();
        Serial.println("down");


        break;


      case 3:  //right
        moveright();
        Serial.println("right");


        break;
      case 4:  //left
        Serial.println("left");


        moveleft();
        break;
      case 5:  //center
        Serial.println("center");
        idle();
        lcd.clear();
        break;
      default:
        Serial.println(0);
        lcd.clear();


        break;
    }


    if (onoff == 1 & digitalRead(buttonpin) == 0){
      switch (actclaw()) {
        case 1:
          //Serial.println("dropping");
          //Serial.println(buttonpush);
          buttonpush = 0;
          onoff = 1;
          myservo.write(180);  // Move to 180 degrees
          //Serial.println("go to 180");
          delay(1000);
          myservo.write(0);  // Move back to 0 degrees
         // Serial.println("go to 0");
          delay(1000);
          break;
        case 2:
          Serial.println("dropping");
          Serial.println(buttonpush);
          buttonpush = 0;
          onoff = 1;
          myservo.write(180);  // Move to 180 degrees
         // Serial.println("go to 180");
          delay(1000);
          myservo.write(0);  // Move back to 0 degrees
         // Serial.println("go to 0");
          delay(1000);
          break;
        default:
          analogWrite(ena, 0);
          analogWrite(enb, 0);
          myservo.write(0);


          lcd.clear();


          break;
      }


  } else {
    dialog();
  }
}
}
